■開発用DB
各自の端末にてDockerコンテナとして起動することを想定。

・Dockerfile等配置場所
「ServerApp/DB_Docker」

■事前準備
Docker for Windowsをインストール

・インストーラ
https://download.docker.com/win/stable/Docker%20for%20Windows%20Installer.exe
コンテナの種類はLinuxのままにして下さい。(Windowsコンテナを使用、をチェックしない)

インストール手順の参考サイト
https://qiita.com/toro_ponz/items/d66d5571c4646ad33279
NOS社内回線から利用する場合はプロキシを設定してください。
https://qiita.com/wryun0suke/items/1f4bbd2977ae41ee7a36


■開発用DBの起動方法
「ServerApp/DB_Docker/start.bat」を管理者として実行。

コンテナはデータを永続化しない設定にしている。
テストデータは、Insert文として保存しておくこと。
各自のテストデータは、「ServerApp/DB_Docker/sqlserver/init-data/additional」配下に配置する。
(シーケンスなどは各自が被らないように、あらかじめ使用する範囲を決めておくこと。)


■開発用DBの停止方法
「ServerApp/DB_Docker/stop.bat」を管理者として実行。


■TableなどのDB定義文の配置場所
「ServerApp/DB_Docker/sqlserver/init-data」配下に配置。
Dockerコンテナ作成時に、ここの定義文を実行している。


■DB定義が変更された場合
変更された定義ファイルをgitからpullし、開発用DBを一度停止し、再度起動する。


■自動テストについて

DBは各自のローカルにあり、他の人に影響を与えない。
なので、自動テストを作成する際は、関連テーブルを一度Truncate → テストに必要なデータをInsertしてテストを行う。
（WebApp_IntegrationTestsプロジェクト内のテストを参考にして下さい。）


■CICDツール(Azure Pipeline)との関係

パイプラインの「IntegrationTest」ステージにて、開発用DBのコンテナをローカルと同じ方法で立ち上げ、
そこに対して「WebApp_IntegrationTests」プロジェクト内のテストを自動実行している。

また「DeployToTesting」ステージにて検証環境に自動デプロイする際も、Webコンテナに加え、開発用DBコンテナも
配置しています(Docker-composeを利用)。


。
